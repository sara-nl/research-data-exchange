# This file can be linted using a web tool:
# - https://git.ia.surfsara.nl/SOIL/RDX/-/ci/lint

# Configuration reference:
# - https://docs.gitlab.com/ee/ci/yaml/

variables:
  SBT_DOCKER_IMAGE: "hseeberger/scala-sbt:16.0.1_1.5.4_2.13.6"
  NODE_DOCKER_IMAGE: "node:14-alpine"
  NODE_ENV: "test"
  KANIKO_CONFIG: '{"auths":{"$CI_REGISTRY":{"username":"$CI_REGISTRY_USER","password":"$CI_REGISTRY_PASSWORD"}}}'
  DOCKER_IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  RDX_BACKEND_URL: "http://librarian:8081"
  RDX_PDF_HEADERS_PROXY_URL: "https://rdx.lab.surf.nl/conditions"
  RDX_WEB_URL_PROD: "http://rdx.lab.surf.nl"
  RDX_WEB_URL_TEST: "https://rdx-test.lab.surf.nl"

after_script:
  - date

before_script:
  - date

stages:
  - check
  - build
  - package
  - deploy

# ðŸ”¬ TEST JOBS

frontend_e2e:
  stage: check
  image: cypress/base:16.17.1
  variables:
    RDX_BACKEND_URL: "http://localhost:8081"
    CYPRESS_RDX_BACKEND_URL: "http://localhost:8081"
  artifacts:
    paths:
      - frontend/cypress/screenshots
      - frontend/cypress/videos
    expire_in: 1 week
  script:
    - cd frontend/
    - npm ci
    - echo $RDX_BACKEND_URL
    # This build is not suitable for productions.
    # See: nextjs environment variables caching.
    - npm run build
    - npm run start &
    - npm run cypress:run
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/
      - .next/cache

backend_v1_test:
  stage: check
  image: $SBT_DOCKER_IMAGE
  script:
    - cd backend/v1
    - sbt "test"
  cache:
    paths:
      - ~/.ivy2/

# ðŸ“¦ BUILD AND PACKAGE JOBS

backend_v1_build:
  stage: build
  image: $SBT_DOCKER_IMAGE
  script:
    - cd backend/v1
    - sbt "assembly"
  artifacts:
    expire_in: 1 week
    paths:
      - backend/v1/sharer/target/scala-2.13/sharer-assembly-*.jar
      - backend/v1/librarian/target/scala-2.13/librarian-assembly-*.jar
  cache:
    paths:
      - ~/.ivy2/

backend_v1_docker:
  stage: package
  dependencies:
    - backend_v1_build
  image:
    # See: https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export DOCKER_REGISTRY_PATH="$CI_REGISTRY_IMAGE/backend/v1"
    - echo "$KANIKO_CONFIG" > /kaniko/.docker/config.json
    - find . -name "backend-assembly-0.1.jar"
    - /kaniko/executor --cache=true --context $CI_PROJECT_DIR/backend/v1/ --dockerfile $CI_PROJECT_DIR/backend/v1/Dockerfile --destination "$DOCKER_REGISTRY_PATH:$DOCKER_IMAGE_TAG" --destination "$DOCKER_REGISTRY_PATH:$CI_COMMIT_REF_NAME" --destination "$DOCKER_REGISTRY_PATH:latest"

frontend_docker:
  stage: package
  image:
    # See: https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export DOCKER_REGISTRY_PATH="$CI_REGISTRY_IMAGE/frontend"
    - echo "$KANIKO_CONFIG" > /kaniko/.docker/config.json
    - find . -name ".next"
    - /kaniko/executor --build-arg RDX_PDF_HEADERS_PROXY_URL="$RDX_PDF_HEADERS_PROXY_URL" --build-arg RDX_BACKEND_URL="$RDX_BACKEND_URL" --cache=false --context $CI_PROJECT_DIR/frontend/ --dockerfile $CI_PROJECT_DIR/frontend/Dockerfile --destination "$DOCKER_REGISTRY_PATH:$DOCKER_IMAGE_TAG" --destination "$DOCKER_REGISTRY_PATH:$CI_COMMIT_REF_NAME" --destination "$DOCKER_REGISTRY_PATH:latest"

# # ðŸš€ DEPLOYMENT JOBS

# # This is a job template.
# # See: https://docs.gitlab.com/ee/ci/yaml/#extends
# .deploy_tpl:
#   stage: deploy
#   image: python:3.9-slim
#   cache:
#     paths:
#       - .cache/pip
#   script:
#     - chmod 0600 "${RDX_GITLAB_SSH_KEY}"
#     - apt-get update
#     - apt -y install openssh-client
#     - pip install ansible
#     - cd deploy/
#     - ansible-playbook -u ubuntu -i $ANSIBLE_INVENTORY playbooks/containers.yml --key-file "$RDX_GITLAB_SSH_KEY"

# deploy_test:
#   extends: .deploy_tpl
#   variables:
#     RDX_WEBDAV_USER: $WEBDAV_USER_TEST
#     RDX_WEBDAV_PASSWORD: $WEBDAV_PASSWORD_TEST
#     ANSIBLE_INVENTORY: "inventory.yml"
#     RDX_WEB_URL: $RDX_WEB_URL_TEST

# deploy_prod:
#   extends: .deploy_tpl
#   only:
#     variables:
#       - $CI_COMMIT_TAG =~ /^prod\-.*/i
#   variables:
#     RDX_WEBDAV_USER: $WEBDAV_USER_PROD
#     RDX_WEBDAV_PASSWORD: $WEBDAV_PASSWORD_PROD
#     ANSIBLE_INVENTORY: "inventory-prod.yml"
#     RDX_WEB_URL: $RDX_WEB_URL_PROD
