---
- hosts: all
  vars_files:
    - vars/backend.yml

  tasks:
    - name: Create /etc/rdx directory
      become: true
      ansible.builtin.file:
        path: /etc/rdx
        state: directory
        mode: '0755'

    - name: Create /etc/rdx/.env file
      become: true
      ansible.builtin.copy:
        src: "{{ lookup('env', 'ENV_FILE') }}"
        dest: /etc/rdx/.env
        mode: '0644'

    - name: Log into private registry and force re-authorization
      become: true
      community.general.docker_login:
        registry: "{{ docker_registry_url }}"
        username: "{{ lookup('env', 'DOCKER_USERNAME') }}"
        password: "{{ lookup('env', 'DOCKER_PASSWORD') }}"
        reauthorize: yes

    - name: Update backend and DB containers
      become: true
      tags: [docker]
      community.docker.docker_compose:
        project_name: rdx
        remove_orphans: true
        definition:
          version: "2"
          services:
            postgres:
              image: postgres
              restart: "always"
              environment:
                POSTGRES_HOST_AUTH_METHOD: trust

            db-migrations:
              image: "{{ docker_registry_url }}/backend/v2:{{ lookup('env', 'DOCKER_IMAGE_TAG') }}"
              env_file:
                - /etc/rdx/.env
              environment:
                  APPLICATION: "database-migrations"
              depends_on:
                  postgres:
                      condition: service_started

            sharer:
              image: "{{ docker_registry_url }}/backend/v2:{{ lookup('env', 'DOCKER_IMAGE_TAG') }}"
              restart: "always"
              depends_on:
                db-migrations:
                  condition: service_completed_successfully
              env_file:
                - /etc/rdx/.env
              environment:
                APPLICATION: "sharer"

            librarian:
              image: "{{ docker_registry_url }}/backend/v2:{{ lookup('env', 'DOCKER_IMAGE_TAG') }}"
              restart: "always"
              depends_on:
                db-migrations:
                  condition: service_completed_successfully
              ports:
                - 8000:8000
              env_file:
                - /etc/rdx/.env
              environment:
                APPLICATION: "librarian"

            frontend:
              image: "{{ docker_registry_url }}/frontend:{{ lookup('env', 'DOCKER_IMAGE_TAG') }}"
              restart: "always"
              depends_on: [librarian]
              ports:
                - 3000:3000
              environment:
                RDX_BACKEND_URL: http://librarian:8000

    - name: Log out of docker registry
      become: true
      community.docker.docker_login:
        state: absent
